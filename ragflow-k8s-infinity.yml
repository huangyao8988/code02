apiVersion: v1
kind: ConfigMap
metadata:
  name: infinity-config
data:
  infinity_conf.toml: |
    [general]
    version                  = "0.6.0"
    time_zone                = "utc-8"
    
    [network]
    server_address           = "0.0.0.0"
    postgres_port            = 5432
    http_port                = 23820
    client_port              = 23817
    connection_pool_size     = 128
    
    [log]
    log_filename             = "infinity.log"
    log_dir                  = "/var/infinity/log"
    log_to_stdout            = true
    log_file_max_size        = "100MB"
    log_file_rotate_count    = 10
    
    # trace/debug/info/warning/error/critical 6 log levels, default: info
    log_level               = "info"
    
    [storage]
    persistence_dir         = "/var/infinity/persistence"
    data_dir                = "/var/infinity/data"
    optimize_interval        = "10s"
    cleanup_interval         = "60s"
    compact_interval         = "120s"
    storage_type             = "local"
    mem_index_capacity       = 65536
    
    [buffer]
    buffer_manager_size      = "8GB"
    lru_num                  = 7
    temp_dir                 = "/var/infinity/tmp"
    result_cache             = "off"
    memindex_memory_quota    = "4GB"
    
    [wal]
    wal_dir                       = "/var/infinity/wal"
    full_checkpoint_interval      = "30s"
    delta_checkpoint_interval     = "5s"
    wal_compact_threshold         = "1GB"
    wal_flush                     = "only_write"
    
    [resource]
    resource_dir                  = "/var/infinity/resource"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: infinity-env
data:
  TIMEZONE: "Asia/Shanghai"
  MEM_LIMIT: "8Gi"  # 8GB in Kubernetes format
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: infinity-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  # Adjust size as needed
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ragflow-infinity
spec:
  serviceName: infinity-service
  replicas: 1
  selector:
    matchLabels:
      app: infinity
  template:
    metadata:
      labels:
        app: infinity
    spec:
      containers:
      - name: infinity
        image: infiniflow/infinity:v0.6.0-dev3
        command: ["infinity", "-f", "/etc/infinity/infinity_conf.toml"]
        ports:
        - containerPort: 23817
          name: thrift
        - containerPort: 23820
          name: http
        - containerPort: 5432
          name: psql
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: infinity-env
              key: TIMEZONE
        resources:
          requests:
            memory: 4Gi
            cpu: "2"
          limits:
            memory: 8Gi
            cpu: "4"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/infinity
        - name: data-volume
          mountPath: /var/infinity
        livenessProbe:
          httpGet:
            path: /admin/node/current
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /admin/node/current
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: infinity-config
          items:
          - key: infinity_conf.toml
            path: infinity_conf.toml
      securityContext:
        fsGroup: 1000  # Ensure write permissions to volumes
  volumeClaimTemplates:
  - metadata:
      name: data-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: infinity-service
spec:
  selector:
    app: infinity
  ports:
  - name: thrift
    port: 23817
    targetPort: 23817
  - name: http
    port: 23820
    targetPort: 23820
  - name: psql
    port: 5432
    targetPort: 5432
  type: ClusterIP