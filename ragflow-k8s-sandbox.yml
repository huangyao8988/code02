apiVersion: apps/v1
kind: Deployment
metadata:
  name: ragflow-sandbox-executor-manager
  labels:
    app: sandbox-executor-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sandbox-executor-manager
  template:
    metadata:
      labels:
        app: sandbox-executor-manager
    spec:
      containers:
        - name: sandbox-executor-manager
          image: infiniflow/sandbox-executor-manager:latest
          ports:
            - containerPort: 9385
          envFrom:
            - configMapRef:
                name: sandbox-env-config
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
          securityContext:
            privileged: false  # 避免特权模式
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]  # 禁用所有权限
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9385
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            limits:
              cpu: "2"
              memory: "8Gi"  # 从 .env 的 MEM_LIMIT
            requests:
              cpu: "0.5"
              memory: "4Gi"
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: sandbox-executor-manager-service
spec:
  selector:
    app: sandbox-executor-manager
  ports:
    - protocol: TCP
      port: 9385
      targetPort: 9385
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sandbox-env-config
data:
  TZ: "Asia/Shanghai"
  SANDBOX_EXECUTOR_MANAGER_POOL_SIZE: "3"
  SANDBOX_BASE_PYTHON_IMAGE: "infiniflow/sandbox-base-python:latest"
  SANDBOX_BASE_NODEJS_IMAGE: "infiniflow/sandbox-base-nodejs:latest"
  SANDBOX_ENABLE_SECCOMP: "false"
  SANDBOX_MAX_MEMORY: "256m"
  SANDBOX_TIMEOUT: "10s"